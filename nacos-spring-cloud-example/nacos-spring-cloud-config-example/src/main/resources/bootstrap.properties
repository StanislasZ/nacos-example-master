spring.cloud.nacos.config.server-addr=127.0.0.1:8848
# \u9ED8\u8BA4 public
spring.cloud.nacos.config.namespace=89f2421b-b731-4ac6-a93c-1c136745b0e1

# \u9ED8\u8BA4 DEFAULT_GROUP
spring.cloud.nacos.config.group=DEFAULT_GROUP


# appName
spring.application.name=example
# Config Type: properties(Default Value) \ yaml \ yml
spring.cloud.nacos.config.file-extension=properties
#spring.cloud.nacos.config.file-extension=yaml


# ????????????????group????DEFAULT_GROUP, refresh????false???????
spring.cloud.nacos.config.extension-configs[0].data-id=example2.properties
spring.cloud.nacos.config.extension-configs[0].refresh=true






# Map Nacos Config: example.properties

# Create the config Of nacos firstly?you can use one of the following two methods:
## Create Config By OpenAPI
### Create Config By OpenAPI
# curl -X POST 'http://127.0.0.1:8848/nacos/v1/cs/configs' -d 'dataId=example.properties&group=DEFAULT_GROUP&content=useLocalCache=true'
### Get Config By OpenAPI
# curl -X GET 'http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=example.properties&group=DEFAULT_GROUP'

## Create Config By Console
### Login the console of Nacos: http://127.0.0.1:8848/nacos/index.html , then create config:
### Data ID: example.properties
### Group: DEFAULT_GROUP
### Content: useLocalCache=true
